#!/bin/sh

#
# UBUNTU NOTE
# -----------
# 1. When downgrading (say from 2.3.0 to 2.2.0) then prerm of 2.3.0 is run
#    followed by postinst of 2.2.0. The prerm is invoked with "upgrade 2.2.0"
#    argument and postinst is invoked with "configure 2.3.0" argument.
# 2. When upgrading (say from 2.2.0 to 2.3.0) then prerm of 2.2.0 is run
#    followed by postinst of 2.3.0. The prerm is invoked with "upgrade 2.3.0"
#    argument and postinst is invoked with "configure 2.2.0" argument.
# 3. When re-installing (say from 2.2.0 to 2.2.0) then prerm of 2.2.0 is run
#    followed by postinst of 2.2.0. The prerm is invoked with "upgrade 2.2.0"
#    argument and postinst is invoked with "configure 2.2.0" argument.
#
# RHEL/CentOS NOTE
# ----------------
# 1. When downgrading (say from 2.3.0 to 2.2.0) then oddly postinst of 2.2.0
#    is run first followed by prerm of 2.3.0. The postinst is invoked with
#    "2" and prerm is invoked with "1".
# 2. When upgrading (say from 2.2.0 to 2.3.0) then prerm of 2.2.0 is NOT run
#    but postinst of 2.3.0 is run. The postinst is invoked with "2" argument.
# 3. When re-installing (say from 2.2.0 to 2.2.0) then prerm is NOT run but
#    and postinst of 2.2.0 is run. The postinst is invoked with "2" argument.

rmmodules()
{
    find /lib/modules -type f -name zocl.ko -delete
    find /lib/modules -type f -name zocl.ko.kz -delete
    find /lib/modules -type f -name zocl.ko.xz -delete
    depmod -A
}

installdir=/opt/xilinx/xrt
systemddir=/etc/systemd/system

echo "Unloading old XRT Linux kernel modules"
rmmod zocl
XRT_VERSION_STRING_OLD=`dkms status -m xrt | awk -F, '{print $2}'`
for OLD in $XRT_VERSION_STRING_OLD; do
    echo "Unregistering old XRT Linux kernel module sources $OLD from dkms"
    dkms remove -m xrt -v $OLD --all
    break
done
rmmodules

echo "Invoking DKMS common.postinst for xrt"
/usr/lib/dkms/common.postinst xrt @XRT_VERSION_STRING@ "" "" $2
if [ $? -eq 0 ]; then
    echo "Finished DKMS common.postinst"
    install -m 644 /usr/src/xrt-@XRT_VERSION_STRING@/driver/edge/drm/zocl/10-zocl.rules /etc/udev/rules.d
    echo "Loading new XRT Linux kernel modules"
    udevadm control --reload-rules
    modprobe zocl
    udevadm trigger
fi

if [ -z "`dkms status -m xrt -v @XRT_VERSION_STRING@ |grep installed`" ]; then
    echo "****************************************************************"
    echo "* DKMS failed to install XRT drivers."
    echo "* Please check if kernel development headers are installed for OS variant used."
    echo "* "
    echo "* Check build logs in /var/lib/dkms/xrt/@XRT_VERSION_STRING@"
    echo "****************************************************************"
fi

#install pyopencl
#get major version of pyopencl
VERSION=$(python -m pip list 2>&1 | grep -Po '(?<=pyopencl )(.+)' | grep -Po '[0-9][0-9][0-9][0-9]')
FLAVOR=`grep '^ID=' /etc/os-release | awk -F= '{print $2}'`
FLAVOR=`echo $FLAVOR | tr -d '"'`

#ppc+rhel
# skip pyopencl installation
if [ `uname -m` = "ppc64le" ] && [ $FLAVOR = "rhel" ]; then
    exit 0
fi
#ppc+ubuntu
#need to manually install python3 and pyhont3-pip
if [ `uname -m` = "ppc64le" ] && [ $FLAVOR = "ubuntu" ]; then
    echo "Installing pyopencl..."
    pip3 install pyopencl
    python3 -c "import pyopencl"
    if [ $? != 0 ]; then
        echo "***********************************************************************"
        echo "* FAILED TO INSTALL PYOPENCL"
        echo "* Please make sure python3 and python3-pip are installed"
        echo "* If installation still failed"
        echo "* Please try to install pyopencl using the "
        echo "* offical documentation: https://documen.tician.de/pyopencl/misc.html"
        echo "***********************************************************************"
    fi
    exit 0
fi

if [ -z $VERSION ] ; then
    echo "Installing pyopencl..."
    #need to force install numpy version 1.8 for centos
    if [ $FLAVOR = "centos" ] || [ $FLAVOR = "rhel" ] ; then
        pip install --upgrade setuptools
        pip install --ignore-installed numpy==1.8
    fi
    pip install pyopencl
# if older version of pyopencl and import fails prompt user to upgarde pyopencl
elif [ $VERSION -lt 2019 ] && [ $(python -c "import pyopencl") ]; then
    echo "***********************************************************************"
    echo "* Pyopencl ($VERSION) is installed on the system but pyopencl >= 2019.1"
    echo "* is required. Please uninstall the current pyopencl by running"
    echo "* 'apt remove python-pyopencl' or 'pip uninstall pyopencl'" 
    echo "* and then reinstall the xrt package"
    echo "***********************************************************************"
    exit 0
else
    echo "Skipping pyopencl installation..."
    exit 0
fi
if [ $(python -c "import pyopencl") ]; then
    echo "***********************************************************************"
    echo "* FAILED TO INSTALL PYOPENCL"
    echo "*"
    echo "* Please try to reinstall xrt package after running"
    echo "* 'sudo pip install --upgrade pip'"
    echo "* 'sudo pip install numpy'"
    echo "* Or follow the official pyopencl installation guide: "
    echo "* https://documen.tician.de/pyopencl/misc.html"
    echo "***********************************************************************"
fi
exit 0
